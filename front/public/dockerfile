# build stage
FROM node:17-alpine as build-stage
WORKDIR /app
ENV PATH /app/node_modules/.bin:$PATH

COPY package*.json ./

# RUN apk --no-cache add --virtual native-deps \
#   g++ gcc libgcc libstdc++ linux-headers make python && \
#   npm install --quiet node-gyp -g &&\
#   npm ci --quiet && \
#   apk del native-deps

RUN npm ci --quiet

COPY . ./

COPY ./.env.front ./.env

RUN npm run build

# production stage
FROM nginx:stable-alpine as production-stage
COPY --from=build-stage /app/dist /usr/share/nginx/html
COPY --from=build-stage /app/nginx.conf /etc/nginx/
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]